title: Start
tags:
---

// Misc. string variables
<<declare $playerResponse = "" as string>>
<<declare $gptResponse = "" as string>>
<<declare $player_name = "" as string>>
<<declare $player_intro = "" as string>>
<<declare $player_answer = "" as string>>
<<declare $gptOption1 = "" as string>>
<<declare $gptOption2 = "" as string>>
<<declare $gptOption3 = "" as string>>
<<declare $gptOption4 = "" as string>>
<<declare $gptOption5 = "" as string>>

<<declare $initial_state = "0_intro_proteinSynthesis" as string>>

// Research study
<<declare $debug = false as bool>>
<<declare $participant_id = "craftstest1" as string>>
<<declare $condition = "treatment" as string>>
<<declare $remote = false as bool>>
<<declare $grade = "9th" as string>>

<<declare $protein_synthesis_topic = "" as string>>

-> Start from intro
-> Jump to lab
    <<jump ProteinSynthesisLab>>
-> amino acid test
    <<jump AminoAcidTest>>

Narrator: Select the server host.
-> Remote
    <<set $remote to true>>
-> Local
    <<set $remote to false>>

<<if $remote == true>>
    <<connect_to_server WebsocketManager remote>>
<<else>>
    <<connect_to_server WebsocketManager>>
<<endif>>

<<RequestInput InputPanel "What's your name?">> // accept player input
-> Submit
<<SaveAndCloseInput InputPanel "$player_name">>

// checks that player actually input something
// <<if $player_name is "">>
//    <<jump PlayerResponding>>
// <<endif>>

<<send_first_message WebsocketManager "$player_name" "$initial_state" "$participant_id" "$condition" "$grade">>
<<jump SendingToServer>>

===
title: SendingToServer
---
// reset variables 
<<set $playerResponse to "">>
<<set $gptOption1 to "">>
<<set $gptOption2 to "">>
<<set $gptOption3 to "">>
<<set $gptOption4 to "">>
<<set $gptOption5 to "">>

// <<if $current_state == "6_portal">>
//     <<toggle_hide_images OliverThinking false>> // show oliver thinking
//     <<wait_for_message WebsocketManager>> // wait for responses to show up in queue
//     <<toggle_hide_images OliverThinking true>> // hide oliver thinking
// <<else>>
//     <<show_current_bubbles TwoCharacterDisplay>>
//     <<set_characters_idle TwoCharacterDisplay>>
    <<wait_for_message WebsocketManager>> // wait for responses to show up in queue
//     <<hide_current_bubbles TwoCharacterDisplay>>
//     <<set_characters_not_idle TwoCharacterDisplay>>
// <<endif>>
<<jump GPTResponding>>
===


title: PlayerResponding
---
<<RequestInput InputPanel "What would you like to say?">> // accept player input
-> Submit
<<SaveAndCloseInput InputPanel "$playerResponse">>

// checks that player actually input something
<<if $playerResponse is "">>
    <<jump PlayerResponding>>
<<endif>>

<<send_player_message WebsocketManager "$playerResponse">> // send player's input to server
<<jump SendingToServer>>
===
title: GPTResponding
---
<<run_response WebsocketManager>> // dequeue next response
<<if $gptResponse != "">>
    <<if $gptResponse == "ACTION">> 
        <<jump {$actionNode}>>
    // <<elseif $gptResponse == "VISUAL">>
    //     <<run_response WebsocketManager>>
    //     <<show_visual_aid VisualAidCard "$image_to_display">>
    //     {$gptResponse} // card comes down with this line
    //     <<jump GPTResponding>>
    // <<elseif $gptResponse == "ALBUM_TUTORIAL">>
    //     <<jump AlbumTutorial>>
    // <<elseif $gptResponse == "LOG_TUTORIAL">>
    //    <<jump LogTutorial>>
    <<else>>
        {$gptResponse}
        <<jump GPTResponding>>
    <<endif>>
<<else>> 
    // if there are options to present after, they will be shown to user
    <<if $gptOption1 != "" || $gptOption2 != "" || $gptOption3 != "" || $gptOption4 != "" || $gptOption5 != "">>
        -> {$gptOption1} <<if $gptOption1 != "">>
            <<send_player_message WebsocketManager "$gptOption1">>
            <<jump SendingToServer>>
        -> {$gptOption2} <<if $gptOption2 != "">>
            <<send_player_message WebsocketManager "$gptOption2">>
            <<jump SendingToServer>>
        -> {$gptOption3} <<if $gptOption3 != "">>
            <<send_player_message WebsocketManager "$gptOption3">>
            <<jump SendingToServer>>
        -> {$gptOption4} <<if $gptOption4 != "">>
            <<send_player_message WebsocketManager "$gptOption4">>
            <<jump SendingToServer>>
        -> {$gptOption5} <<if $gptOption5 != "">>
            <<send_player_message WebsocketManager "$gptOption5">>
            <<jump SendingToServer>>
    <<endif>>
    <<jump PlayerResponding>>
<<endif>>
===

title: ProteinSynthesisLabAntibodies
---
<<set $protein_synthesis_topic to "antibodies">>
<<jump ProteinSynthesisLab>>
===
title: ProteinSynthesisLabHormones
---
<<set $protein_synthesis_topic to "hormones">>
<<jump ProteinSynthesisLab>>
===
title: ProteinSynthesisLabEnzymes
---
<<set $protein_synthesis_topic to "enzymes">>
<<jump ProteinSynthesisLab>>
===

title: ProteinSynthesisLab
---
<<LoadScene ImageTargetTestCodon>>
<<hide_background Canvas true>>
<<toggle_character_position Canvas true>>
Yari: In this lab, you'll get some hands-on experience with the processes of transcription and translation.
Yari: First, scan the nucleus of the cell with your camera.
<<hide_canvas Canvas true>>
===

title: ProteinSynthesisDNATutorial
---
<<hide_canvas Canvas false>>
Yari: Nice! Do you see the DNA that popped up? 
Yari: During transcription, a small portion of the DNA unwinds. One of the strands is used as a template to create a new strand of mRNA.
Yari: Your job is to figure out what the bases of this new mRNA strand should be!
Yari: Arrange on codon cards on the table to form a nucleotide base sequence for the mRNA strand that matches the DNA template strand. Make sure to use the complementary bases!
Yari: Once you're done, press the "Finish transcription" button to generate your mRNA strand.
<<hide_canvas Canvas true>>
===

title: ProteinSynthesisTranscriptionUnsuccessful
---
<<hide_canvas Canvas false>>
Yari: It doesn't look like you've arranged all the codon cards yet. Make sure that your camera is tracking all the cards correctly. Let's try again!
<<hide_canvas Canvas true>>
===

title: ProteinSynthesisTranscriptionIncorrect
---
<<hide_canvas Canvas false>>
Yari: Hmmm... I don't think you've transcribed the DNA correctly. Let's try again! 
<<hide_canvas Canvas true>>
===

title: ProteinSynthesisTranscriptionSuccessful
---
<<hide_canvas Canvas false>>
Yari: Nice work! Now that you've generated your mRNA strand, let's move on to translation.
Yari: Use your finger to drag your mRNA strand to the ribosome.
<<hide_canvas Canvas true>>
===

title: ProteinSynthesisReflection
---
<<UnloadScene>>
<<hide_background Canvas false>>
<<hide_canvas Canvas false>>
<<toggle_character_position Canvas false>>

<<set $playerResponse to "">>
<<send_player_message WebsocketManager "$playerResponse">>
<<jump SendingToServer>>
===

title: ProteinSynthesisAminoAcidInput
---
<<ToggleAminoAcidInput CodonManager true>>
<<hide_canvas Canvas false>>
Yari: Great! Now let's figure out what amino acids we get from this mRNA strand.
Yari: Grab your codon chart and use it to figure out which amino acids correspond to each codon.
Yari: Once you're done, press the "Check amino acids" button to see if your amino acid sequence matches the codon sequence.
<<hide_canvas Canvas true>>
===

title: ProteinSynthesisAminoAcidInputSuccessful
---
<<hide_canvas Canvas false>>
Yari: Nice work! Now let's watch how the tRNA come in to form the amino acid sequence you created.
<<hide_canvas Canvas true>>
===

title: AminoAcidTest
---
<<LoadScene AminoAcidInputTest>>
<<hide_background Canvas true>>
<<hide_canvas Canvas true>>
===

